generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  roleId    Int
  role      Role     @relation(fields: [roleId], references: [id])
  groupId   Int?
  group     Group?   @relation(fields: [groupId], references: [id])
  createdAt DateTime @default(now())
  password  String
  tasks     Task[]   @relation("UserTasks")
}

model Group {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
  tasks Task[] @relation("GroupTasks")
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model Priority {
  id    Int    @id @default(autoincrement())
  name  String
  tasks Task[] @relation("PriorityTask")
}

model Status {
  id    Int    @id @default(autoincrement())
  name  String
  tasks Task[] @relation("StatusTasks")
}

model Task {
  id                Int      @id @default(autoincrement())
  title             String
  description       String
  assignedToUserId  Int?
  assignedToGroupId Int?
  user              User?    @relation("UserTasks", fields: [assignedToUserId], references: [id])
  group             Group?   @relation("GroupTasks", fields: [assignedToGroupId], references: [id])
  creationDate      DateTime @default(now())
  dueDate           DateTime 

  priorityId Int
  priority   Priority @relation("PriorityTask", fields: [priorityId], references: [id])

  statusId Int    @default(1)
  status   Status @relation("StatusTasks", fields: [statusId], references: [id])
}
