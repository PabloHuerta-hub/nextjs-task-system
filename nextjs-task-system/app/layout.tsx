import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { ThemeModeScript } from "flowbite-react";
import "./globals.css";
import { SidebarComponent } from "@/components/layout/sideBar";
import { cookies } from "next/headers";
import { jwtVerify } from "jose";
import { verifyToken } from "@/actions/token/token-actions";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Task system",
  description: "Generated by create flowbite react",
};

const secret = new TextEncoder().encode(process.env.JWT_SECRET);

export default async function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  // Obtener la cookie tokenLogin
  const cookieStore = cookies();
  const tokenExists = cookieStore.get("tokenLogin")?.value;

  if (!tokenExists) {
    // Si no existe el token, no se puede continuar con la verificaci√≥n
    return (
      <html lang="en">
        <head>
          <ThemeModeScript />
        </head>
        <body className={`${inter.className} min-h-screen bg-gray-50`}>
          {children}
        </body>
      </html>
    );
  }

  try {
    // Verificar el token JWT
    const { payload } = await jwtVerify(tokenExists, secret);

    // Verificar el contenido del token, como el rol o el email
    verifyToken(payload);

    // Pasar el payload al SidebarComponent para que lo utilice
    return (
      <html lang="en">
        <head>
          <ThemeModeScript />
        </head>
        <body className={`${inter.className} min-h-screen bg-gray-50`}>
          <SidebarComponent user={payload}>{children}</SidebarComponent>
        </body>
      </html>
    );
  } catch (error) {
    console.error("Token verification failed", error);

    return (
      <html lang="en">
        <head>
          <ThemeModeScript />
        </head>
        <body className={`${inter.className} min-h-screen bg-gray-50`}>
          {children}
        </body>
      </html>
    );
  }
}
